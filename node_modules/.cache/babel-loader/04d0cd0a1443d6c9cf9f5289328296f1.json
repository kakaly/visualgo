{"ast":null,"code":"var _jsxFileName = \"/Users/karthikkalyanaraman/reactive-algorithms/src/RenderList.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { jsPlumb } from 'jsplumb';\nimport { buildList } from './library';\nimport './App.css';\n\nconst RenderList = ({\n  linkedList\n}) => {\n  let nodes = Object.keys(linkedList);\n  jsPlumb.importDefaults({\n    ConnectionsDetachable: false\n  });\n  const savedLinkedList = useRef();\n  useEffect(() => {\n    var connections = []; // memoize the list and let useEffect render only when there is a change\n\n    savedLinkedList.current = linkedList;\n    jsPlumb.ready(() => {\n      connections = buildList(linkedList);\n    });\n    return function cleanup() {\n      connections.forEach(conn => jsPlumb.deleteConnection(conn));\n    };\n  }, [linkedList]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, nodes.map(node => /*#__PURE__*/React.createElement(\"div\", {\n    key: node,\n    id: `element${node}`,\n    className: \"Node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }\n  }, node)));\n};\n\nexport default RenderList;","map":{"version":3,"sources":["/Users/karthikkalyanaraman/reactive-algorithms/src/RenderList.js"],"names":["React","useEffect","useRef","jsPlumb","buildList","RenderList","linkedList","nodes","Object","keys","importDefaults","ConnectionsDetachable","savedLinkedList","connections","current","ready","cleanup","forEach","conn","deleteConnection","map","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA,OAAO,WAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAkB;AACnC,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,CAAZ;AACAH,EAAAA,OAAO,CAACO,cAAR,CAAuB;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAAvB;AAEA,QAAMC,eAAe,GAAGV,MAAM,EAA9B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,WAAW,GAAG,EAAlB,CADc,CAEd;;AACAD,IAAAA,eAAe,CAACE,OAAhB,GAA0BR,UAA1B;AACAH,IAAAA,OAAO,CAACY,KAAR,CAAc,MAAM;AAAEF,MAAAA,WAAW,GAAGT,SAAS,CAACE,UAAD,CAAvB;AAAqC,KAA3D;AACA,WAAO,SAASU,OAAT,GAAmB;AACxBH,MAAAA,WAAW,CAACI,OAAZ,CAAoBC,IAAI,IAAIf,OAAO,CAACgB,gBAAR,CAAyBD,IAAzB,CAA5B;AACD,KAFD;AAGD,GARQ,EAQN,CAACZ,UAAD,CARM,CAAT;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACa,GAAN,CAAUC,IAAI,iBAAI;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAgB,IAAA,EAAE,EAAG,UAASA,IAAK,EAAnC;AAAsC,IAAA,SAAS,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDA,IAAxD,CAAlB,CADH,CADF;AAKD,CApBD;;AAsBA,eAAehB,UAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { jsPlumb } from 'jsplumb'\nimport { buildList } from './library'\n\nimport './App.css'\n\nconst RenderList = ({linkedList}) => {\n  let nodes = Object.keys(linkedList)\n  jsPlumb.importDefaults({ ConnectionsDetachable: false });\n\n  const savedLinkedList = useRef();\n  useEffect(() => {\n    var connections = []\n    // memoize the list and let useEffect render only when there is a change\n    savedLinkedList.current = linkedList\n    jsPlumb.ready(() => { connections = buildList(linkedList) })\n    return function cleanup() {\n      connections.forEach(conn => jsPlumb.deleteConnection(conn))\n    }\n  }, [linkedList])\n\n  return(\n    <div className='Container'>\n      {nodes.map(node => <div key={node} id={`element${node}`} className='Node'>{node}</div>)}\n    </div>\n  )\n}\n\nexport default RenderList;"]},"metadata":{},"sourceType":"module"}