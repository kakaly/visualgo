{"ast":null,"code":"import { jsPlumb } from 'jsplumb';\nconst endpointConnector = {\n  connector: [\"Bezier\", {\n    stub: 25,\n    midpoint: 0.001\n  }],\n  overlays: [[\"PlainArrow\", {\n    location: 1,\n    width: 15,\n    length: 12\n  }]]\n};\n\nconst buildList = linkedList => {\n  let nodes = Object.keys(linkedList);\n  let connections = [];\n  nodes.forEach(node => {\n    if (node !== 'null') {\n      let target = linkedList[node];\n      let conn = jsPlumb.connect({\n        source: `element${node}`,\n        target: `element${target}`,\n        endpointStyle: {\n          fillStyle: \"yellow\"\n        }\n      }, endpointConnector);\n      connections.push(conn);\n    }\n  });\n  return connections;\n};\n\nexport { buildList };","map":{"version":3,"sources":["/Users/karthikkalyanaraman/reactive-algorithms/src/library.js"],"names":["jsPlumb","endpointConnector","connector","stub","midpoint","overlays","location","width","length","buildList","linkedList","nodes","Object","keys","connections","forEach","node","target","conn","connect","source","endpointStyle","fillStyle","push"],"mappings":"AAAA,SAASA,OAAT,QAAwB,SAAxB;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,SAAS,EAAE,CAAC,QAAD,EAAW;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAX,CADa;AAExBC,EAAAA,QAAQ,EAAE,CAAC,CAAC,YAAD,EAAe;AAAEC,IAAAA,QAAQ,EAAE,CAAZ;AAAeC,IAAAA,KAAK,EAAE,EAAtB;AAA0BC,IAAAA,MAAM,EAAE;AAAlC,GAAf,CAAD;AAFc,CAA1B;;AAKA,MAAMC,SAAS,GAAIC,UAAD,IAAgB;AAChC,MAAIC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,CAAZ;AACA,MAAII,WAAW,GAAG,EAAlB;AACAH,EAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAI;AACpB,QAAGA,IAAI,KAAK,MAAZ,EAAoB;AAClB,UAAIC,MAAM,GAAGP,UAAU,CAACM,IAAD,CAAvB;AACA,UAAIE,IAAI,GAAGlB,OAAO,CAACmB,OAAR,CAAgB;AACzBC,QAAAA,MAAM,EAAE,UAASJ,IAAK,EADG;AAEzBC,QAAAA,MAAM,EAAE,UAASA,MAAO,EAFC;AAGzBI,QAAAA,aAAa,EAAC;AAAEC,UAAAA,SAAS,EAAE;AAAb;AAHW,OAAhB,EAINrB,iBAJM,CAAX;AAKAa,MAAAA,WAAW,CAACS,IAAZ,CAAiBL,IAAjB;AACD;AACF,GAVD;AAWA,SAAOJ,WAAP;AACD,CAfD;;AAiBA,SAASL,SAAT","sourcesContent":["import { jsPlumb } from 'jsplumb'\n\nconst endpointConnector = {\n  connector: [\"Bezier\", { stub: 25, midpoint: 0.001 }],\n  overlays: [[\"PlainArrow\", { location: 1, width: 15, length: 12 }]]\n}\n\nconst buildList = (linkedList) => {\n  let nodes = Object.keys(linkedList)\n  let connections = []\n  nodes.forEach(node => {\n    if(node !== 'null') {\n      let target = linkedList[node]\n      let conn = jsPlumb.connect({\n        source:`element${node}`,\n        target:`element${target}`,\n        endpointStyle:{ fillStyle: \"yellow\" },\n        }, endpointConnector)\n      connections.push(conn)\n    }\n  })\n  return connections\n}\n\nexport { buildList }"]},"metadata":{},"sourceType":"module"}